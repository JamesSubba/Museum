/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { useState } from "react";

type GLTFResult = GLTF & {
  nodes: {
    Tree_lp_11: THREE.Mesh;
  };
  materials: {};
};

type ActionName = "Tree_lp_11|Take 001|Layer 001";
type GLTFActions = Record<ActionName, THREE.AnimationAction>;

export function TreeModel(props: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>();
  const { nodes, materials, animations } = useGLTF("/models/we.glb") as GLTFResult;
  const { actions } = useAnimations<GLTFActions>(animations, group);
  const [color, setColor] = useState("pink")
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <mesh
        onClick={()=>{console.log("hello")}}
          name="Tree_lp_11"
          castShadow
          receiveShadow
          geometry={nodes.Tree_lp_11.geometry}
          material={nodes.Tree_lp_11.material}
          material-color={color}
          rotation={[Math.PI / 2, 0, 0]}
          scale={0.01}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/models/we.glb");